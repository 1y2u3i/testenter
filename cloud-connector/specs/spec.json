{"Vehicle": {"children": {"Body": {"children": {"AlarmSystem": {"children": {"AlarmSystemActivationControl": {"datatype": "uint8[]", "description": "Method/serive to control  alarm system Activation  active or inactive. True = Active. False = Inac", "type": "actuator"}, "AlarmTriggered": {"datatype": "boolean", "description": "Signal for Alarm Triggerd", "type": "actuator"}}, "description": "Alarm System signals.", "type": "branch"}, "Horn": {"children": {"HornControl": {"datatype": "uint8[]", "description": "Method for control Horn, params ControlCommand and ClientID. ControlCommand I/P 0=Off, 1=On, 2=Signaling, 3=Adaptive.", "type": "actuator"}, "IsActive": {"datatype": "boolean", "description": "Horn active or inactive. True = Active. False = Inactive.", "type": "actuator"}}, "description": "Horn signals.", "type": "branch"}, "InteriorMonitoring": {"children": {"InteriorActivityDetected": {"datatype": "boolean", "description": "Monitor Interior Activity and update the status if Detected.", "type": "actuator"}}, "description": "InteriorMonitoring Activity Signals.", "type": "branch"}, "Lights": {"children": {"Backup": {"children": {"Left": {"children": {"IsDefect": {"datatype": "boolean", "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.", "type": "sensor"}, "IsOn": {"datatype": "boolean", "description": "Indicates if light is on or off. True = On. False = Off.", "type": "actuator"}}, "description": "Backup lights.", "type": "branch"}, "Right": {"children": {"IsDefect": {"datatype": "boolean", "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.", "type": "sensor"}, "IsOn": {"datatype": "boolean", "description": "Indicates if light is on or off. True = On. False = Off.", "type": "actuator"}}, "description": "Backup lights.", "type": "branch"}}, "description": "Backup lights.", "type": "branch"}, "Beam": {"children": {"High": {"children": {"Left": {"children": {"IsDefect": {"datatype": "boolean", "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.", "type": "sensor"}, "IsOn": {"datatype": "boolean", "description": "Indicates if light is on or off. True = On. False = Off.", "type": "actuator"}}, "description": "Beam light High", "type": "branch"}, "Right": {"children": {"IsDefect": {"datatype": "boolean", "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.", "type": "sensor"}, "IsOn": {"datatype": "boolean", "description": "Indicates if light is on or off. True = On. False = Off.", "type": "actuator"}}, "description": "Beam light High", "type": "branch"}}, "description": "Beam light High", "type": "branch"}, "Low": {"children": {"Left": {"children": {"IsDefect": {"datatype": "boolean", "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.", "type": "sensor"}, "IsOn": {"datatype": "boolean", "description": "Indicates if light is on or off. True = On. False = Off.", "type": "actuator"}}, "description": "Beam light Low", "type": "branch"}, "Right": {"children": {"IsDefect": {"datatype": "boolean", "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.", "type": "sensor"}, "IsOn": {"datatype": "boolean", "description": "Indicates if light is on or off. True = On. False = Off.", "type": "actuator"}}, "description": "Beam light Low", "type": "branch"}}, "description": "Beam light Low", "type": "branch"}}, "description": "Beam lights.", "type": "branch"}, "Brake": {"children": {"Left": {"children": {"IsActive": {"allowed": ["INACTIVE", "ACTIVE", "ADAPTIVE"], "datatype": "string", "description": "Indicates if break-light is active. INACTIVE means lights are off. ACTIVE means lights are on. ADAPTIVE means that break-light is indicating emergency-breaking.", "type": "actuator"}, "IsDefect": {"datatype": "boolean", "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.", "type": "sensor"}}, "description": "Brake lights.", "type": "branch"}, "Right": {"children": {"IsActive": {"allowed": ["INACTIVE", "ACTIVE", "ADAPTIVE"], "datatype": "string", "description": "Indicates if break-light is active. INACTIVE means lights are off. ACTIVE means lights are on. ADAPTIVE means that break-light is indicating emergency-breaking.", "type": "actuator"}, "IsDefect": {"datatype": "boolean", "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.", "type": "sensor"}}, "description": "Brake lights.", "type": "branch"}}, "description": "Brake lights.", "type": "branch"}, "DirectionIndicator": {"children": {"FrontLeft": {"children": {"IsDefect": {"datatype": "boolean", "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.", "type": "sensor"}, "IsSignaling": {"datatype": "boolean", "description": "Indicates if light is signaling or off. True = signaling. False = Off.", "type": "actuator"}}, "description": "Indicator lights.", "type": "branch"}, "FrontRight": {"children": {"IsDefect": {"datatype": "boolean", "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.", "type": "sensor"}, "IsSignaling": {"datatype": "boolean", "description": "Indicates if light is signaling or off. True = signaling. False = Off.", "type": "actuator"}}, "description": "Indicator lights.", "type": "branch"}, "RearLeft": {"children": {"IsDefect": {"datatype": "boolean", "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.", "type": "sensor"}, "IsSignaling": {"datatype": "boolean", "description": "Indicates if light is signaling or off. True = signaling. False = Off.", "type": "actuator"}}, "description": "Indicator lights.", "type": "branch"}, "RearRight": {"children": {"IsDefect": {"datatype": "boolean", "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.", "type": "sensor"}, "IsSignaling": {"datatype": "boolean", "description": "Indicates if light is signaling or off. True = signaling. False = Off.", "type": "actuator"}}, "description": "Indicator lights.", "type": "branch"}}, "description": "Indicator lights.", "type": "branch"}, "ExteriorLightControl": {"comment": "ExteriorLightControl Method input param is Array of uint8 [ InstanceFeature,  ControlCommand,  ClientID ]", "datatype": "uint8[]", "description": "Exterior lights Control Method.", "type": "actuator"}, "Fog": {"children": {"Front": {"children": {"IsDefect": {"datatype": "boolean", "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.", "type": "sensor"}, "IsOn": {"datatype": "boolean", "description": "Indicates if light is on or off. True = On. False = Off.", "type": "actuator"}}, "description": "Fog lights.", "type": "branch"}, "Rear": {"children": {"IsDefect": {"datatype": "boolean", "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.", "type": "sensor"}, "IsOn": {"datatype": "boolean", "description": "Indicates if light is on or off. True = On. False = Off.", "type": "actuator"}}, "description": "Fog lights.", "type": "branch"}}, "description": "Fog lights.", "type": "branch"}, "Hazard": {"children": {"IsDefect": {"datatype": "boolean", "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.", "type": "sensor"}, "IsSignaling": {"datatype": "boolean", "description": "Indicates if light is signaling or off. True = signaling. False = Off.", "type": "actuator"}}, "description": "Hazard lights.", "type": "branch"}, "LicensePlate": {"children": {"Front": {"children": {"IsDefect": {"datatype": "boolean", "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.", "type": "sensor"}, "IsOn": {"datatype": "boolean", "description": "Indicates if light is on or off. True = On. False = Off.", "type": "actuator"}}, "description": "License plate lights.", "type": "branch"}, "Rear": {"children": {"IsDefect": {"datatype": "boolean", "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.", "type": "sensor"}, "IsOn": {"datatype": "boolean", "description": "Indicates if light is on or off. True = On. False = Off.", "type": "actuator"}}, "description": "License plate lights.", "type": "branch"}}, "description": "License plate lights.", "type": "branch"}, "Parking": {"children": {"FrontLeft": {"children": {"IsDefect": {"datatype": "boolean", "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.", "type": "sensor"}, "IsOn": {"datatype": "boolean", "description": "Indicates if light is on or off. True = On. False = Off.", "type": "actuator"}}, "description": "Parking lights.", "type": "branch"}, "FrontRight": {"children": {"IsDefect": {"datatype": "boolean", "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.", "type": "sensor"}, "IsOn": {"datatype": "boolean", "description": "Indicates if light is on or off. True = On. False = Off.", "type": "actuator"}}, "description": "Parking lights.", "type": "branch"}, "RearLeft": {"children": {"IsDefect": {"datatype": "boolean", "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.", "type": "sensor"}, "IsOn": {"datatype": "boolean", "description": "Indicates if light is on or off. True = On. False = Off.", "type": "actuator"}}, "description": "Parking lights.", "type": "branch"}, "RearRight": {"children": {"IsDefect": {"datatype": "boolean", "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.", "type": "sensor"}, "IsOn": {"datatype": "boolean", "description": "Indicates if light is on or off. True = On. False = Off.", "type": "actuator"}}, "description": "Parking lights.", "type": "branch"}}, "description": "Parking lights.", "type": "branch"}, "Running": {"children": {"FrontLeft": {"children": {"IsDefect": {"datatype": "boolean", "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.", "type": "sensor"}, "IsOn": {"datatype": "boolean", "description": "Indicates if light is on or off. True = On. False = Off.", "type": "actuator"}}, "description": "Daytime running lights (DRL).", "type": "branch"}, "FrontRight": {"children": {"IsDefect": {"datatype": "boolean", "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.", "type": "sensor"}, "IsOn": {"datatype": "boolean", "description": "Indicates if light is on or off. True = On. False = Off.", "type": "actuator"}}, "description": "Daytime running lights (DRL).", "type": "branch"}, "RearLeft": {"children": {"IsDefect": {"datatype": "boolean", "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.", "type": "sensor"}, "IsOn": {"datatype": "boolean", "description": "Indicates if light is on or off. True = On. False = Off.", "type": "actuator"}}, "description": "Daytime running lights (DRL).", "type": "branch"}, "RearRight": {"children": {"IsDefect": {"datatype": "boolean", "description": "Indicates if light is defect. True = Light is defect. False = Light has no defect.", "type": "sensor"}, "IsOn": {"datatype": "boolean", "description": "Indicates if light is on or off. True = On. False = Off.", "type": "actuator"}}, "description": "Daytime running lights (DRL).", "type": "branch"}}, "description": "Daytime running lights (DRL).", "type": "branch"}}, "description": "Exterior lights.", "type": "branch"}, "RequestRoundTripCounter": {"datatype": "uint8", "description": "Method Request for Round Trip Time counter.", "type": "actuator"}, "ResponseRoundTrip": {"datatype": "uint8[]", "description": "Response for Rount Trip Time in ms from counter.", "type": "actuator"}}, "description": "All body components.", "type": "branch"}, "Chassis": {"children": {"Accelerator": {"children": {"ArbitratedPedalPosition": {"datatype": "uint8", "description": "Driver's driving requests and remote control driving requests for Accelerator Pedal", "type": "sensor", "unit": "percent"}, "PedalPosition": {"datatype": "uint8", "description": "Accelerator pedal position as percent. 0 = Not depressed. 100 = Fully depressed.", "type": "sensor", "unit": "percent"}, "PedalPositionControl": {"datatype": "uint8[]", "description": "accelerator pedal value (Service Interface Driving / Method AcceleratorPedalControl)", "type": "actuator"}}, "description": "Accelerator signals", "type": "branch"}, "Axle": {"children": {"Row1": {"children": {"SteeringAngle": {"comment": "Single track two-axle model steering angle refers to the angle that a centrally mounted wheel would have.", "datatype": "float", "description": "Single track two-axle model steering angle. Angle according to ISO 8855. Positive = degrees to the left. Negative = degrees to the right.", "type": "sensor", "unit": "degrees"}, "Wheel": {"children": {"Left": {"children": {"Speed": {"datatype": "float", "description": "Rotational speed of a vehicle's wheel.", "type": "sensor", "unit": "km/h"}, "SpeedSet": {"datatype": "float", "description": "Set Required Rotational speed of a vehicle's wheel.", "type": "actuator", "unit": "km/h"}}, "description": "Wheel signals for axle", "type": "branch"}, "Right": {"children": {"Speed": {"datatype": "float", "description": "Rotational speed of a vehicle's wheel.", "type": "sensor", "unit": "km/h"}, "SpeedSet": {"datatype": "float", "description": "Set Required Rotational speed of a vehicle's wheel.", "type": "actuator", "unit": "km/h"}}, "description": "Wheel signals for axle", "type": "branch"}}, "description": "Wheel signals for axle", "type": "branch"}}, "description": "Axle signals", "type": "branch"}, "Row2": {"children": {"SteeringAngle": {"comment": "Single track two-axle model steering angle refers to the angle that a centrally mounted wheel would have.", "datatype": "float", "description": "Single track two-axle model steering angle. Angle according to ISO 8855. Positive = degrees to the left. Negative = degrees to the right.", "type": "sensor", "unit": "degrees"}, "Wheel": {"children": {"Left": {"children": {"Speed": {"datatype": "float", "description": "Rotational speed of a vehicle's wheel.", "type": "sensor", "unit": "km/h"}, "SpeedSet": {"datatype": "float", "description": "Set Required Rotational speed of a vehicle's wheel.", "type": "actuator", "unit": "km/h"}}, "description": "Wheel signals for axle", "type": "branch"}, "Right": {"children": {"Speed": {"datatype": "float", "description": "Rotational speed of a vehicle's wheel.", "type": "sensor", "unit": "km/h"}, "SpeedSet": {"datatype": "float", "description": "Set Required Rotational speed of a vehicle's wheel.", "type": "actuator", "unit": "km/h"}}, "description": "Wheel signals for axle", "type": "branch"}}, "description": "Wheel signals for axle", "type": "branch"}}, "description": "Axle signals", "type": "branch"}}, "description": "Axle signals", "type": "branch"}, "Brake": {"children": {"ArbitratedPedalPosition": {"datatype": "uint8", "description": "Driver's driving requests and remote control driving requests for Brake Pedal", "type": "sensor", "unit": "percent"}, "BrakePedalSwitch": {"datatype": "boolean", "description": "Set the Brake Pedal Switch Value true or Fasle", "type": "sensor"}, "PedalPosition": {"datatype": "uint8", "description": "Brake pedal position as percent. 0 = Not depressed. 100 = Fully depressed.", "type": "sensor", "unit": "percent"}, "PedalPositionControl": {"datatype": "uint8[]", "description": "brake pedal value (Service Interface Driving / Method BrakePedalControl)", "type": "actuator"}}, "description": "Brake system signals", "type": "branch"}, "MechanicalLockControl": {"datatype": "uint8[]", "description": "Mechanical Lock Control Method/service.", "type": "actuator"}, "MechanicalLockIsActive": {"datatype": "boolean", "description": "Mechanical Lock Status, IsActive( may it differ in time from request eg. due to safety requirment).", "type": "actuator"}, "Steering": {"children": {"StartPermission": {"datatype": "boolean", "description": "Steering wheel Control. True  = Released. False = Not Released.", "type": "sensor"}}, "description": "Steering wheel signals", "type": "branch"}, "SteeringWheel": {"children": {"Angle": {"datatype": "int16", "description": "Steering wheel angle. Positive = degrees to the left. Negative = degrees to the right.", "type": "sensor", "unit": "degrees"}, "AngleControl": {"datatype": "int16[]", "description": "steering angle (Service Interface Driving / Method SteeringControl)", "type": "actuator"}, "ArbitratedAngle": {"datatype": "int16", "description": "Steering wheel angle. Positive = degrees to the left. Negative = degrees to the right.", "type": "sensor", "unit": "degrees"}}, "description": "Steering wheel signals", "type": "branch"}}, "description": "All data concerning steering, suspension, wheels, and brakes.", "type": "branch"}, "FlexiblePermissionManager": {"children": {"AlarmModeControl": {"datatype": "uint8[]", "description": "Vehicle Alarm Mode  Control request (Service Interface Service permission Mangager / Method AlarmModeControl)", "type": "actuator"}, "AlarmModeState": {"datatype": "boolean", "description": "Alarm Mode State", "type": "actuator"}, "LowPowerModeControl": {"datatype": "uint8[]", "description": "Vehicle Low Power Mode  Control request (Service Interface Service permission Mangager / Method LowPowerModeControl)", "type": "actuator"}, "LowPowerModeState": {"datatype": "boolean", "description": "Low Power Mode State", "type": "actuator"}, "RemoteVehicleLockControl": {"datatype": "uint8[]", "description": "Remote Vehicle Lock Control request (Service Interface Service permission Mangager / Method RemoteVehicleControl)", "type": "actuator"}, "RemoteVehicleLockState": {"datatype": "boolean", "description": "Remote Vehicle Lock State.", "type": "actuator"}}, "description": "All Permission Manager related control Methods nodes.", "type": "branch"}, "Powertrain": {"children": {"Application_SW_Version": {"datatype": "string", "description": "Software version of Driving app (VRTE Adaptive Autosar application)", "type": "sensor"}, "Body": {"children": {"ResponseRoundTrip": {"datatype": "uint8[]", "description": "Response for Rount Trip Time in ms from counter.", "type": "actuator"}}, "description": "Powertain.Body signals.", "type": "branch"}, "PropulsionLockControl": {"datatype": "uint8[]", "description": "Propulsion Lock Control Method/service to control Propulsion Lock.", "type": "actuator"}, "PropulsionLockIsActive": {"datatype": "boolean", "description": "Propulsion Lock Status, Is Active(may differ in time from the request due to safety requriment).", "type": "actuator"}, "PropulsionModeControl": {"datatype": "uint8[]", "description": "Propulsion Lock Mode Control Method/service to control Propulsion Lock Mode.", "type": "actuator"}, "RequestRoundTripCounter": {"datatype": "uint8", "description": "Method Request for Round Trip Time counter.", "type": "actuator"}, "StartPermission": {"datatype": "boolean", "description": "Driver's driving requests and remote control driving requests for Driving Control Release", "type": "sensor"}, "StartStop": {"children": {"ArbitratedStartStopButton": {"datatype": "boolean", "description": "Driver's driving requests and remote control driving requests for Start/Stop", "type": "sensor"}, "EngineStart": {"datatype": "boolean", "description": "Engine Start/Stop Functionality i.e Start Stop button request value.", "type": "actuator"}, "StartControl": {"datatype": "uint8[]", "description": "StartStop request (Service Interface Driving / Method StartStopControl)", "type": "actuator"}, "StartStopButton": {"datatype": "boolean", "description": "Engine Start/Stop button Status", "type": "sensor"}}, "description": "Engine Start/Stop Functionality and Status button branch.", "type": "branch"}, "Transmission": {"children": {"ArbitratedSelectedGear": {"datatype": "int8", "description": "Driver's driving requests and remote control driving requests for Gear", "type": "sensor"}, "SelectedGear": {"datatype": "int8", "description": "The selected gear. 0=Neutral, 1/2/..=Forward, -1/-2/..=Reverse, 126=Park, 127=Drive.", "type": "sensor"}, "SelectedGearControl": {"datatype": "int8[]", "description": "Gear request (Service Interface Driving / Method GearControl)", "type": "actuator"}}, "description": "Transmission-specific data, stopping at the drive shafts.", "type": "branch"}}, "description": "Powertrain data for battery management, etc.", "type": "branch"}, "RequestTakeOver": {"datatype": "uint8[]", "description": "To be able to control the vehicle remotely, a requester must send a TakeoverRequest (Service Interface Driving / Method TakeoverControl)", "type": "actuator"}, "RequestorInControl": {"datatype": "uint16", "description": "Driver's driving requests and remote control driving requests for Control", "type": "sensor"}, "StartPermissions": {"datatype": "uint8[]", "description": "Steering and driving functions must only be activated if a release has been given via the ControlRelease interface. The Start Permission manager (SPM) provides this release.ControlRelease (Service Interface Driving / Method ControlRelease)", "type": "actuator"}}, "description": "High-level vehicle data.", "type": "branch"}}